% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/uts_climate.R
\name{uts_data_check_and_fill_w_na}
\alias{uts_data_check_and_fill_w_na}
\title{Check monthly long format data for gaps and fill with NAs if data are missing}
\usage{
uts_data_check_and_fill_w_na(data, key = NULL)
}
\arguments{
\item{data}{A data frame with monthly "count" in long format and
separate columns "Year" and "Month"}

\item{key}{Variable(s) that uniquely determine time indices.
NULL (dafault) for empty key. Required, if multiple time indices exist
(e.g. key = "Measure" if Temperature and Precipitation data exist)}
}
\value{
data frame and tsibble, e.g.: \cr
\verb{A tsibble: 754 x 4} \cr
\verb{Year_Month  Year Month count} \cr
\verb{<mth> <dbl> <fct> <dbl>} \cr
}
\description{
Time series objects don't allow missing years or months.
Check and fill missing data with NAs w/ \code{{tsibble}} functions and provide
output as tsibble with generated Year_Month as time index.
}
\details{
Time series objects don't allow gaps in time (missing years or months).
With {tsibble} functions check and fill gaps in time and add NA count values
and provide output in wide Month format (Year Temp_Precip Jan Feb .... Dec)

data input format (Month in long format) \cr
\verb{Year Month Temp_Precip   count} \cr
\verb{<dbl> <dbl> <chr>         <dbl>} \cr
\verb{1  1887     1 Temperature    NA} \cr
\verb{2  1887     1 Precipitation   4} \cr
\verb{3  1887     2 Temperature    NA} \cr
\code{:} \cr
\verb{5  2019    12 Temperature    4.55} \cr
\verb{6  2019    12 Precipitation 30.4} \cr

data output format (Month in wide format) \cr
\verb{Year Temp_Precip   Jan   Feb  ... Dec} \cr
\verb{<dbl> <fct>       <dbl> <dbl> ... <dbl>} \cr
\verb{1  1887 Temperature NA    NA  ... NA} \cr
\code{:} \cr
\verb{3  1889 Temperature -3.1 -2.09 ...-1.01} \cr
}
\examples{
data <- monthly_climate_basel \%>\%
  dplyr::select(City, Measure, Year, Month, count)
uts_data_check_and_fill_w_na(data, key = "Measure")

# delete all "2017" and "Feb" rows and fill with NAs
data <- monthly_climate_basel \%>\%
  dplyr::filter(Year != 2017 & Month != "Feb")
uts_data_check_and_fill_w_na(data, key = "Measure")
}
